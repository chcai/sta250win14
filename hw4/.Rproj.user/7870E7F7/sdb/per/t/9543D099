{
    "contents" : "library('animint')\nlibrary('maps')\n\n## load the data saved in maps.R\nload('dat2.rda')\n\n## get the mean departure delays by origin airport and carrier. \n## put delays into matrix form for ease\ndep.dels = \n  by(dat$DepDelay, list(dat$Origin, dat$UniqueCarrier), \n     mean, na.rm = TRUE)\ndep.dels = matrix(dep.dels, nrow = length(big.airports))\n\n## get carriers in alphabetical order\ncarriers = sort(as.character(unique(dat$UniqueCarrier)))\n\n## misnomer; should be called my.labels. \n## the airports on the map will be color coded \n## by mean departure delays. \n## these will serve as labels for the colors.\nmy.colors = matrix(nrow = length(big.airports), \n                   ncol = length(carriers))\nfor(j in 1:length(carriers))\n  for(i in 1:length(big.airports)) \n  {\n    if(is.na(dep.dels[i, j])) \n      my.colors[i, j] = 'NA' else \n    {\n      if(dep.dels[i, j] <= 10) my.colors[i, j] = '< 10 mins'\n      if(dep.dels[i, j] > 10 && dep.dels[i, j] <= 20) \n        my.colors[i, j] = '10 - 20 mins'\n      if(dep.dels[i, j] > 20) my.colors[i, j] = '> 20 mins'\n    }\n  }\n\n## data frame to be used for plotting\nto.plot = \n  as.data.frame(\n    matrix(c(rep(airports$long, length(carriers)), \n             rep(airports$lat, length(carriers))), \n           ncol = 2))\nto.plot = cbind(to.plot, as.vector(my.colors), \n                rep(1:length(carriers), each = length(big.airports)))\nnames(to.plot) = c('long', 'lat', 'my.colors', 'carriers')\n\n## for plotting US map\nUSpolygons = map_data('state')\nUSpolygons$state = \n  state.abb[match(USpolygons$region, tolower(state.name))]\n\nmap <- ggplot() + \n  geom_polygon(aes(x = long, y = lat, group = group), \n               data = USpolygons, fill = \"white\", colour = \"grey\") + \n  geom_point(aes(x = long, y = lat, showSelected = carriers, \n                 colour = my.colors), \n             data = to.plot, size = 4) + \n  scale_color_manual(\n    values = \n      c('NA' = 'grey', '< 10 mins' = 'green', \n        '10 - 20 mins' = 'yellow', '> 20 mins' = 'red'))\n\n## every five seconds, changes carrier; \n## so carrier is the 'time' variable\nall.dels = \n  by(dat$DepDelay, dat$UniqueCarrier, mean, na.rm = TRUE)\nto.plot.ts = \n  as.data.frame(cbind(1:length(carriers), all.dels))\nnames(to.plot.ts) = c('carriers', 'delays')\n\nts <- ggplot() + \n  make_tallrect(to.plot.ts, 'carriers') + \n  geom_line(aes(carriers, delays),\n            data = to.plot.ts) + \n  xlab('Carrier') + \n  ylab('Mean Departure Delay (Mins)') + \n  scale_x_discrete(breaks = 1:length(carriers), \n                   labels = carriers) + \n  ggtitle('Overall Departure Delays by Carrier')\n\ntime <- list(variable = 'carriers', ms = 5000)\n\nair.anim <- list(map = map, ts = ts, time = time, \n                 width = list(map = 970, ts = 400), \n                 height = list(400))\n\ngg2animint(air.anim, \"airports-anim\")\n",
    "created" : 1394763487294.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1339157756",
    "id" : "9543D099",
    "lastKnownWriteTime" : 1395112538,
    "path" : "C:/Users/Christine/Google Drive/GitHub/sta250win14/hw4/animint.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}