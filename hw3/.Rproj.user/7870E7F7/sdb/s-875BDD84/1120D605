{
    "contents" : "library('MASS')\nlibrary('car')\n\ndat = read.csv('train-sample.csv', header = TRUE, \n               colClasses = c('NULL', 'character', 'numeric', \n                              'character', 'numeric', 'numeric', \n                              'character', 'character', 'character', \n                              'character', 'character', 'character', \n                              'character', 'NULL', 'character'))\nnames(dat)\n\ny = numeric(nrow(dat))\ny[dat[,'OpenStatus'] == 'open'] = 1\ny[dat[,'OpenStatus'] != 'open'] = 0\n\nPostCreationDate = as.POSIXlt(dat[,'PostCreationDate'], \n                              format = '%m/%d/%Y %H:%M:%S')\nOwnerCreationDate = as.POSIXlt(dat[,'OwnerCreationDate'], \n                               format = '%m/%d/%Y %H:%M:%S')\ndiff.time = \n  ceiling(\n    as.numeric(\n      difftime(PostCreationDate, OwnerCreationDate, \n               units = 'days')))\n\ntag.log = matrix(nrow = nrow(dat), ncol = 5)\nfor(j in 1:5) {\n  tag.log[,j] = dat[, paste0('Tag', j)] != ''\n}\ntag.num = apply(tag.log, 1, sum)\n\n## word counts?\n\nX = \n  data.frame(\n    cbind(\n      as.numeric(diff.time), \n      as.factor(dat[,'OwnerUserId']), \n      as.numeric(dat[,'ReputationAtPostCreation']), \n      as.numeric(dat[,'OwnerUndeletedAnswerCountAtPostTime']), \n      as.numeric(tag.num)))\n\nset.seed(1)\nsub.set = sample.int(nrow(dat), nrow(dat)-10000)\nfit = glm(formula = as.factor(y) ~ ., data = X, \n          family = 'binomial', subset = sub.set)\n\ntmp = predict.glm(fit, X[-sub.set,], type = 'response')\n\ny2 = numeric(length(tmp))\ny2[tmp >= .5] = 1\ny2[tmp < .5] = 0\n\nsum(y2 == y[-sub.set])\n\n#dat.test = read.csv('test.csv', header = TRUE)\n",
    "created" : 1393362251651.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1897912545",
    "id" : "1120D605",
    "lastKnownWriteTime" : 1393478488,
    "path" : "C:/Users/Christine/Google Drive/GitHub/sta250win14/hw3/hw3.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}